有a/b ≡ a*x(mol p)
1. 当n是质数是用快速幂求逆元——b^(n-2)
LL qmi(int a, int b, int p)
{
    LL res = 1;
    while(b){
        if(b & 1) res = res * a % p;
        a = (LL)a * a % p;
        b >>= 1;
    }
    return res;
}

if(b % p == 0) puts("impossible");       //如果b与p不互质那么说明逆元不存在
else cout << qmi(b, p - 2, p) << endl;
2. 当n不是质数的时候，用扩展欧几里得算法求逆元
int exgcd(int a, int b, int &x, int &y)
{
    if (!b) {
        x = 1, y = 0;
        return a;
    }
    int d = exgcd(b, a % b, y, x);
    y -= a / b * x;
    return d;
}
int a, p, x, y;
// if (a < p) swap(a, p);
cin >>  a >> p;
int d = exgcd(a, p, x, y);
if (d == 1) cout << ((LL)x + p) % p << endl;//保证x是正数
else puts("impossible");
